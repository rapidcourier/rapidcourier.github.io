{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","sec","this","refs","scrollIntoView","behavior","block","react_default","a","createElement","className","style","color","fontSize","onClick","scroll","bind","background","padding","fa","ref","flexDirection","fontWeight","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.45f9700a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { FaLock, FaMap, FaShippingFast, FaClock, FaPhone, FaEnvelope} from 'react-icons/fa';\n\nclass App extends Component {\n\n\n  scroll(sec) {\n    this.refs[sec].scrollIntoView({ behavior: 'smooth', block: 'start' });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"top\">\n          <div className=\"bg\" />\n\n          <header>\n            <div>\n              <h1 style={{color: '#2196f3', fontSize: '35px'}}>Rapid Courier USA</h1>\n            </div>\n\n            <div className=\"menu\">\n              <p onClick={this.scroll.bind(this, 'services')}>Services</p>\n              <p onClick={this.scroll.bind(this, 'contact')}>Contact</p>\n            </div>\n          </header>\n\n          <h2 style={{background: 'rgba(0,0,0,.5)', padding: 20}}>Rapid Courier USA is a <span style={{color: \"#2196f3\"}}>Trusted</span> and <span style={{color: \"#2196f3\"}}>Expedient</span> on demand delivery service.</h2>\n          <FaShippingFast className=\"FaShippingFast\" />\n        </div>\n\n        <div ref=\"services\" className=\"services\">\n          <h2>Services</h2>\n          <div className=\"icons\">\n\n            <div style={{fontSize: 21, flexDirection: 'column', padding: 20}}>\n              <FaLock style={{color: '#2196f3', fontSize: 45}} /><br/>\n              <strong className=\"icon-title\">Secure</strong>\n              <p>\n                We can safely handle and deliver up to 500 lbs of goods\n              </p>\n            </div>\n\n            <div style={{fontSize: 21, flexDirection: 'column', padding: 20}}>\n              <FaClock style={{color: '#2196f3', fontSize: 45}} /><br/>\n              <strong className=\"icon-title\">Fast</strong>\n              <p>\n                Get your goods delivered exactly when you need them\n              </p>\n            </div>\n\n            <div style={{fontSize: 21, flexDirection: 'column', padding: 20}}>\n              <FaMap style={{color: '#2196f3', fontSize: 45}} /><br/>\n              <strong className=\"icon-title\">Anywhere</strong>\n              <p>\n                Rapid Courier USA operates anywhere within the tri-state area\n              </p>\n            </div>\n          </div>\n\n          <p style={{padding: 100, background: '#fff', color: '#000', fontSize: 21}} >\n            Our services are customizable per client needs. Get <strong style={{fontWeight: '900', color: '#ffc107'}}>Packages</strong> or <strong style={{fontWeight: '900', color: '#ffc107'}}>Important Documents</strong> delivered across the <strong style={{fontWeight: '900', color: '#ff8f00'}}>Tri-State</strong> area on a <strong style={{fontWeight: '900', color: '#ffc107'}}>One-Time</strong>  or a <strong style={{fontWeight: '900', color: '#ffc107'}}>Regulary Scheduled</strong> basis.\n          </p>\n        </div>\n\n\n        <div ref=\"contact\" className=\"contact\">\n          <h2>For more information and quotes:</h2>\n          <div>\n           <p>\n              <FaEnvelope style={{color: '#2196f3', fontSize: 41}} /> rapidcourierusa@gmail.com\n            </p><br/>\n            <p>\n              <FaPhone style={{color: '#2196f3', fontSize: 41}} /> (000) 000-0000\n            </p>\n          </div>\n\n        </div>\n\n        <div className=\"footer\">\n          <p>\n            Copyright Â© 2018. All Rights Reserved\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}